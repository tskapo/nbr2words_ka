// მაგალითი : ას ოცდაცხრამეტი მილიონ ცხრაას ოთხმოცდაშვიდი ათას ხუთას ოცდათერთმეტი
const ნული = "ნული";
const ოცამდე = ["", "ერთი", "ორი", "სამი", "ოთხი", "ხუთი", "ექვსი", "შვიდო", "რვა", "ცხრა", "ათი", "თერთმეტი", "თორმეტი", "ცამეტი", "თოთხმეტი", "თხუთმეტი", "თექვსმეტი", "ჩვიდმეტი", "თვრამეტი", "ცხრამეტი"];
const ასამდე = ["", "ოცი", "ორმოცი", "სამოცი", "ოთხმოცი"];
const მეტი = ["", "ათასი", "მილიონი", "მილიარდი", "ტრილიონი", "კვადრილიონი", "კვინტილიონი", "სექსტილიონი", "სეპტილიონი", "ოქტილიონი", "ნონილიონი", "დეცილიონი", "უნდეცილიონი", "დეოდეცილიონი", "ტრედეცილიონი", "კვატტუოპდეცილიონი", "კვინდეცილიონი", "სედეცილიონი", "სეპტდეცილიონი", "დუოდევიგინტილიონი", "უნდევიგინტილიონი", "ვიგინტილიონი"];
const და = "და";
var კერძო_და = "და";
var ათწილად_ნიშანი = ",";
var მთელი, წილადი, ასები, ათასები, ათასი;

/*    ფუნქციები    */
function სამციფრიანებად (რიცხვი) {
	var დრ = String(რიცხვი).trim().replace(/ /g, "");
	var სამციფრიანები = [];
	while (დრ.length > 0) {
		სამციფრიანები.push(დრ.substr(-3));
		დრ = დრ.slice(0, -3);
	}

	return სამციფრიანები;
}

function სიტყვებად (რიცხვი) {
	var სამციფრიანები = სამციფრიანებად(რიცხვი);	var შედეგი = [];
	for (var ი = 0; ი < სამციფრიანები.length; ი++) {
		შედეგი.push(სიტყვად(სამციფრიანები[ი]));
	}
	var სიტყვებად = [];
	for (var პ = 0; პ < შედეგი.length; პ++) {
		var ეული = პ > 0
			? შედეგი[პ - 1].length !== 0
				? მეტი[პ].slice(0, -1)
				: მეტი[პ]
			: "";
		სიტყვებად.push([შედეგი[პ], ეული]);
	}
	სიტყვებად.reverse();
	var პასუხი = [];
	for (პ = 0; პ < სიტყვებად.length; პ++) {
		პასუხი.push([სიტყვებად[პ].join(" ")]);
	}
	პასუხი = პასუხი.join(" ").trim();
	return პასუხი.length === 0
		? ნული
		: პასუხი;
}

function განსაზღვრე_ათწილად_ნიშანი(ნიშანი) {
	ათწილად_ნიშანი = ნიშანი;
}

function დაყავი(რიცხვი) {
	var დრ = რიცხვი.split(ათწილად_ნიშანი);
	მთელი = დრ[0] || "";
	წილადი = დრ[1] || "";
}

function ოცამდე_სიტყვად(რიცხვი) {
	return ოცამდე[რიცხვი];
}

function ასამდე_სიტყვად(რიცხვი) {
	var ნაშთი = რიცხვი % 20;
	var რბა = Math.floor(რიცხვი / 20);
	return ნაშთი === 0 ? ასამდე[რბა] : ასამდე[რბა].slice(0, -1) + "და" + ოცამდე_სიტყვად(ნაშთი);
}

function ათასამდე_სიტყვად(რიცხვი) {
	var ასამდე = ასამდე_სიტყვად(რიცხვი.substr(1));
	var რბა = რიცხვი.substr(0, 1);
	var ასი = რბა == 1 ? "ასი" : ოცამდე[რბა].slice(0, -1) + "ასი";
	return ასამდე === 0 || ასამდე.length === 0 ? ასი : ასი.slice(0, -1) + " " + ასამდე;
}

function ათასები_სიტყვად(რიცხვი) {
	var რბა = სიტყვად(რიცხვი);
	return რბა === "ერთი" ? "ათასი" : რბა + " ათასი";
}

function სიტყვად(რიცხვი) {
	რიცხვი = Number(რიცხვი);
	if (რიცხვი < 20) {
		return ოცამდე_სიტყვად(რიცხვი);
	}
	რიცხვი = String(რიცხვი);
	switch (რიცხვი.length) {
		case 2:
			return ასამდე_სიტყვად(რიცხვი);
		case 3:
			return ათასამდე_სიტყვად(რიცხვი);
		default:
			console.log(რიცხვი + " : რიცხვის სიგრძე ამ ფუნქციაში არ უნდა აღემატებოდეს 3-ს");
	}
}
console.log(სიტყვებად(000));
console.log(სიტყვებად(001));
console.log(სიტყვებად(223));
console.log(სიტყვებად(249));
console.log(სიტყვებად(400));
console.log(სიტყვებად(4444));
console.log(სიტყვებად(56378));
console.log(სიტყვებად(123456789001));
console.log(სიტყვებად("123456789001123456789001"));

